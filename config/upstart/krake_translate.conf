
# Reference: https://github.com/mperham/sidekiq/blob/master/examples/upstart/sidekiq.conf
# /etc/init/krake_translate.conf - Sidekiq config

# This example config should work with Ubuntu 12.04+.  It
# allows you to manage multiple Sidekiq instances with
# Upstart, Ubuntu's native service management tool.
#
# See workers.conf for how to manage all Sidekiq instances at once.
#
# Save this config as /etc/init/krake_translate.conf then manage krake_translate with:
#   sudo start krake_translate
#   sudo stop krake_translate
#   sudo status krake_translate
#
# Hack Upstart's reload command to 'quiet' Sidekiq:
#
#   sudo reload krake_translate
#
# or use the service command:
#   sudo service krake_translate {start,stop,restart,status}
#

description "Krake Response Translator"

# This script is not meant to start on bootup, workers.conf
# will start all sidekiq instances explicitly when it starts.
#start on runlevel [2345]
#stop on runlevel [06]

# change to match your deployment user
setuid ubuntu
setgid ubuntu
env HOME=/home/ubuntu

respawn
respawn limit 3 30

# TERM is sent by sidekiqctl when stopping sidekiq. Without declaring these as
# normal exit codes, it just respawns.
normal exit 0 TERM

# Older versions of Upstart might not support the reload command and need
# this commented out.
reload signal USR1

# Upstart waits 5 seconds by default to kill the a process. Increase timeout to
# give sidekiq process enough time to exit.
kill timeout 15

# Setting Index of this service to be default - 0
env index=0
instance $index

script
# this script runs in /bin/sh by default
# respawn as bash so we can source in rbenv
exec /bin/bash <<'EOT'
  echo "sourcing environment variables"
  source /home/ubuntu/.profile
  cd /home/ubuntu/krake-translate

  git checkout -f
  git pull origin master
  /home/ubuntu/.nvm/v0.10.28/bin/npm install
  /home/ubuntu/.nvm/v0.10.28/bin/coffee server_translate.coffee >> /home/ubuntu/logs/translate

EOT
end script